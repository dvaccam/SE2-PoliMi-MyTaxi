Word,Count
*,908
the,696
to,247
of,221
this,205
License,180
file,161
GPL,140
Version,140
by,131
or,117
in,115
and,113
a,102
2,102
is,91
only,91
your,80
for,73
as,72
If,71
include,64
if,64
code,62
under,62
subject,60
option,60
you,60
Oracle,60
with,58
be,54
,52
not,51
add,44
its,44
at,43
either,43
that,42
\license,\,40
indicate,40
packager/legal/LICENSE.txt,40
OR,40
copyright,40
Copyright,40
choice,40
version,40
You,40
provided,40
can,35
are,32
The,31
each,30
new,30
any,28
managed,25
use,25
class,25
All,24
exception,24
has,23
below,21
except,21
obtain,21
section,21
When,21
above,21
so,21
See,21
\License("\CDDL"\)\,20
REMOVE,20
\(collectively,\,20
CDDL,20
single,20
don't,20
information:,20
such,20
NOTICES,20
ALTER,20
2],20
Header,20
particular,20
GNU,20
\license."\\,20
governing,20
[CDDL,20
reserved,20
DO,20
NOT,20
\2,\,20
elected,20
Classpath,20
and/or,20
following,20
elects,20
Contributor(s):,20
Common,20
may,20
wish,20
Development,20
THIS,20
rights,20
\"\Portions\,20
[name,20
brackets,20
licensees,20
limitations,20
language,20
license,20
distribution,20
\("\GPL"\)\,20
HEADER,20
[],20
identifying,20
permissions,20
\applicable,\,20
\Header,\,20
https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html,20
own,20
\software,\,20
compliance,20
Public,20
contents,20
copy,20
\However,\,20
General,20
adding,20
governed,20
\"\[Contributor]\,20
\owner]"\\,20
recipient,20
terms,20
designates,20
Modifications:,20
distributing,20
decision,20
[year],20
holder,20
made,20
Distribution,20
specific,20
affiliates,20
\"\License"\)\,20
software,20
extend,20
Notice,20
enclosed,20
applies,20
fields,20
\therefore,\,20
\"\Classpath"\\,20
(c),20
Exception:,20
\CDDL,\,20
accompanied,20
then,20
replaced,20
distribute,20
COPYRIGHT,20
instance,19
will,19
an,18
no,18
object,18
@param,18
manager,17
on,15
injection,14
need,14
methods,14
null,14
do,14
component,14
bean,13
cleanup,13
tx,13
within,12
This,12
required,12
current,12
from,12
entity,11
name,11
non-tx,11
context,11
PostConstruct,11
there's,11
returned,11
access,11
objects,10
{,9
invocation,9
EJB,9
app,9
},9
it,9
same,9
Create,9
persistence,8
call,8
references,8
application,8
contexts,8
@author,8
bundle,7
method,7
support,7
via,7
global,7
allow,7
state,7
all,7
given,7
created,7
It,7
here,7
type,7
container-managed,7
but,7
it's,7
reference,7
EntityManager,6
client,6
@throws,6
A,6
Check,6
create,6
1997-2013,6
namespace,6
module,6
used,6
we,6
throw,6
lookup,6
starting,6
does,6
other,6
dependencies,6
\inject,\,6
We,6
environment,6
like,5
=,5
physical,5
field,5
jndi-name,5
java:,5
names,5
entries,5
during,5
@ManagedBean,5
dependency,5
@return,5
Inject,5
value,5
actual,5
called,5
TODO,5
injected,5
\,\,4
jndi,4
serializing,4
defined,4
delegate,4
using,4
interceptor,4
check,4
track,4
default,4
factory,4
clazz,4
PreDestroy,4
Wrapper,4
specified,4
there,4
caller,4
Kannan,4
server,4
\true,\,4
Not,4
.ear,4
validate,4
just,4
299,4
should,4
cast,4
up,4
match,4
EntityManagerFactory,4
spec,4
destroy,4
InjectionException,4
wrapper,4
Mahesh,4
case,4
transactional,4
resourceClass,4
passed,4
serialize,4
portion,4
invokePostConstruct,3
was,3
else,3
\hierarchy,\,3
env,3
JCDI,3
after,3
Only,3
return,3
InjectionManager,3
derived,3
em,3
doPrivileged,3
web,3
Initialize,3
without,3
they,3
Any,3
2013,3
Target,3
insertion,3
instantiated,3
Validator,3
java.lang.Object,3
299-enabled,3
Add,3
EE,3
QueryWrapper,3
into,3
ignoring,3
For,3
class-based,3
been,3
store,3
Process,3
java:app,3
them,3
URL,3
already,3
caching,3
keep,3
target,3
non-transactional,3
java:comp,3
register,3
registered,3
portable,3
(if,3
requires,3
instances,3
payload,3
one,3
modules,3
about,3
downward,3
needed,3
constructor,3
handle,3
\Likewise,\,3
EM,3
Wrap,3
set,3
least-derived,3
Kenneth,3
perform,3
no-arg,3
Saks,3
inheritance,3
TODO:,3
calling,3
private/protected,3
most,3
responsibility,2
beans,2
invoke,2
first,2
super-classses,2
\@ManagedBean,\,2
Replace,2
Generate,2
Need,2
java:app/,2
arguments,2
properly,2
Serialize,2
always,2
annoated,2
look,2
processing,2
limited,2
//,2
unit,2
WSDL,2
necessarily,2
subcontexts,2
ValidatorFactory,2
guarantied,2
another,2
prefix,2
live,2
off,2
2008-2010,2
more,2
Keep,2
module-level,2
query,2
safe,2
fully-qualified,2
java:global,2
createManagedObject,2
\Otherwise,\,2
serializable),2
transient,2
File,2
try,2
proxy,2
operation,2
back,2
order,2
concurrent,2
propagated,2
/,2
ID,2
matching,2
@PostConstruct,2
extended,2
java:module/,2
managedObject,2
deserialization,2
@see,2
could,2
@Inject,2
corresponding,2
time,2
First,2
relative,2
Invoke,2
fileURL,2
TypedQuery<X>,2
ensure,2
Implementation,2
Destroy,2
non,2
No,2
public,2
Can,2
invocations,2
must,2
NonTxEMs,2
pointing,2
OK,2
why,2
super-classes),2
class(and,2
map,2
super-classes,2
destroyManagedObject(Object,2
\methods,\,2
ctor,2
instantiate,2
those,2
null),2
\create,\,2
take,2
These,2
well,2
enabled,2
1997-2014,2
hold,2
string,2
EXTENDED,2
itself,2
2008-2013,2
Exception,2
clients,2
\false,\,2
InjectionException;,2
were,2
also,2
\java:module,\,2
JNDI,2
style,2
entities,2
Have,2
undeploy,2
lookup-name,2
Get,2
descriptors,2
EMs,2
\InitialContext,\,2
necessary),2
managedObject),2
instance's,2
container,2
calls,2
!=,2
\called,\,2
details,2
based,2
accessible,2
Bind,2
transients,2
managedBeanClass,2
closed,2
ejb-ref,2
clear,2
mean,2
conversational,2
direct,2
java:comp/env,2
Should,2
annotated,2
failure,2
scope,2
desc,2
JVM,2
Class,2
handles,2
\found,\,2
correctly,2
precedence,1
Set,1
logging,1
client),1
Lookup,1
transaction,1
throwing,1
error,1
catch,1
restore,1
get,1
invoker,1
Doesn't,1
explicit,1
stand-alone,1
JDK's,1
checking,1
seems,1
Linda,1
(even,1
desired),1
Could,1
application-wide,1
7.4.1,1
Spec,1
know,1
==,1
enable,1
ALWAYS,1
have,1
inside,1
unique,1
serialized,1
removed,1
a),1
servEnv.getApplicationRepositoryPath().getAbsolutePath();,1
:,1
\java:app,\,1
method-name,1
trnsactional,1
exported,1
assigned,1
refer,1
needs,1
had,1
Date:,1
war,1
mex),1
files,1
if((next.getWsdlFileUrl(),1
next.setWsdlFileUrl(new,1
factories,1
true,1
go,1
apply,1
wrapped,1
contract,1
+,1
JndiNameEnvironment,1
clients),1
fileURL;,1
web.zip,1
EJBs,1
directly,1
different,1
bean's,1
basically,1
underlying,1
applied,1
env-entries,1
service,1
confirms,1
ask,1
\.ear,\,1
hierarchy,1
eligible,1
Used,1
isn't,1
module-name,1
how,1
allows,1
relevant,1
invoked,1
Local,1
define,1
eagerly,1
contained,1
restart),1
says,1
delegates,1
behavior,1
implementation,1
loop,1
DOL,1
GlassFishNaming,1
completed,1
11805,1
initializing,1
unregister,1
2006-2013,1
place,1
thus,1
non-default,1
servEnv,1
metro,1
looked,1
javax.persistence.StoredProcedyreQyery,1
logical,1
SessionContext,1
bindings,1
happen,1
ServerEnvironment,1
jump,1
defines,1
contains,1
File.separator,1
\one,\,1
Env,1
\ignored,\,1
NonTxEntityManagerCleaner.beforePostInvoke(),1
\"\url/testUrl"\\,1
File(deployedDir+File.separator+next.getWsdlFileUri());,1
query/em,1
found,1
2008,1
save,1
replace,1
J2EE,1
lived,1
2012,1
immediately,1
b),1
well-known,1
non-public,1
Mitesh,1
nothing,1
available,1
deserialze,1
(next.getWsdlFileUri(),1
message,1
Handles,1
abstraction,1
comments,1
NamingException(mex.getLocalizedMessage());,1
better,1
data-sources,1
2008-2012,1
\now,\,1
bundleNonManagedObjs,1
worker,1
run,1
&&,1
Populate,1
\tx,\,1
next.setWsdlFileUrl(fileURL.toURL());,1
Phase,1
invMgr,1
injecting,1
carry,1
ORBs,1
regardless,1
Serializable,1
non-application,1
when,1
HTTP,1
createQuery(CriteriaUpdate),1
instead,1
explicitly,1
server's,1
It's,1
com.sun.enterprise.container.common.impl.QueryWrapper,1
through,1
Just,1
object's,1
\server,\,1
Return,1
encountered,1
invocationmanager,1
syntax,1
local,1
de-serialized,1
update,1
emfUnitName,1
id,1
loader,1
Note,1
(happens,1
post,1
detached,1
Wraps,1
validatorFactory,1
EJB2.0,1
reason,1
(Non,1
UC,1
Apply,1
fall,1
compatible,1
File(deployedDir+File.separator+,1
sufficient,1
wscImpl,1
Proxying,1
java:app(except,1
runtime,1
\postConstruct,\,1
close(),1
naming,1
Call,1
anything,1
resolveProxyClass,1
services,1
non-Serializable,1
Query,1
scenario,1
SynchronizationType,1
because,1
saved,1
IllegalStateException,1
next,1
componentId,1
synchronization,1
Please,1
detatched,1
Can't,1
Persitence,1
javax.persistence.TypedQuery,1
&,1
shouldn't,1
WebServiceContractImpl,1
d),1
parameter,1
CDI,1
File(next.getWsdlFileUri())).isAbsolute()),1
us,1
\java:comp,\,1
automatically,1
ContainerUtil,1
responsible,1
wscImpl.getServerEnvironmentImpl();,1
still,1
end,1
components,1
Close,1
\non-JAXRS,\,1
depend,1
(and,1
interceptorInstance,1
container-common,1
dowloaded,1
possible,1
where,1
propagation,1
regular,1
internal,1
paths,1
\3,\,1
Absolute,1
out,1
might,1
\"\java:module/env/url/testUrl"\\,1
2009-2012,1
componentId-specific,1
being,1
\required,\,1
Holds,1
\1,\,1
supported,1
\class,\,1
\"\_"\)\,1
setter,1
move,1
matches,1
descripto,1
stage,1
postConstruct,1
execution,1
\"\http://localhost:8080/index.html"\\,1
revisit,1
necessary,1
InitialContext,1
whether,1
Unlike,1
+next.getWsdlFileUri());,1
\stuff,\,1
__PM,1
exposed,1
\value,\,1
\Then,\,1
mapped,1
fine-log,1
(sub),1
Home,1
Delay,1
StatefulSessionBeans,1
\bean,\,1
runnable,1
URL(next.getWsdlFileUri()));,1
ContextClassLoader,1
V2,1
turned,1
Overloading,1
\specified,\,1
deployedDir,1
form,1
\instances,\,1
stored,1
thrown,1
if(deployedDir,1
Unpublish,1
1997-2012,1
application-level,1
QueryWrappers,1
commission,1
takes,1
cache,1
next.setWsdlFileUrl((new,1
Meswani,1
Use,1
\if(next.getWsdlFileUri().startsWith("\http"\))\,1
Key,1
once,1
\interfaces,\,1
cause,1
EMF,1
useful,1
case..,1
\case,\,1
Java,1
existing,1
(Throwable,1
expected,1
find,1
File(next.getWsdlFileUri())).toURL());,1
-,1
preDestroy,1
construct,1
null)),1
Publish,1
Internal,1
sync,1
optimize,1
suffix,1
mail-sessions,1
design,1
2.x,1
3.x,1
part,1
we're,1
Context,1
associate,1
potential,1
cases,1
if(next.getBundleDescriptor().getApplication().isVirtual()),1
threadpool,1
WebServiceContractImpl.getInstance();,1
bound,1
Some,1
\manager,\,1
String,1
active,1
GlassFish,1
turn,1
create*Query(),1
app-client,1
nonTxEM,1
allowed,1
conditions,1
Clean,1
ComponentInv,1
issue,1
\preDestroy,\,1
number,1
right,1
\namespace,\,1
Sep,1
URLs,1
until,1
fine,1
\enabled,\,1
c),1
\injection,\,1
\next.getBundleDescriptor().getModuleDescriptor().getArchiveUri().replaceAll("\\\."\,\,1
even,1
if((new,1
compile-time,1
resource,1
javax.persistence.Query,1
Unbind,1
